/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.sql.SQLException;
import java.time.LocalDate;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.plot.PlotOrientation;

/**
 *
 * @author ai
 */
public class Analyze extends javax.swing.JDialog {
private util.Db d;
    /**
     * Creates new form Analyze
     */
    public Analyze(java.awt.Frame parent, boolean modal,util.Db db) {
        super(parent, modal);
        d=db;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tab = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab, javax.swing.GroupLayout.DEFAULT_SIZE, 1166, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    try {
        permintaan();
        keuangan();
    } catch (SQLException ex) {
        util.Db.hindar(ex);
    }
    }//GEN-LAST:event_formWindowOpened
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane tab;
    // End of variables declaration//GEN-END:variables

    private void permintaan() throws SQLException {
        org.jfree.data.general.DefaultPieDataset data=new org.jfree.data.general.DefaultPieDataset();
        for(entity.Barang b:new entity.dao.DAOBarang(d).getDatae())
            data.setValue(b.getNm(), getPermintaan(b.getKode()));
        org.jfree.chart.ChartPanel c=new org.jfree.chart.ChartPanel(ChartFactory.createPieChart("Permintaan Hari Ini", data));
        c.setAutoscrolls(true);
        tab.add("PERMINTAAN", c);
    }

    private double getPermintaan(String kode) throws SQLException {
        double l=0;
        java.sql.PreparedStatement p=d.getPS("select nota from jual where tgl=?");
        p.setDate(1, java.sql.Date.valueOf(LocalDate.now()));
        java.sql.ResultSet r=p.executeQuery();
        while(r.next()){
            entity.DetJual det=new entity.DetJual(r.getString("nota"), kode, d);
            l+=det.getJum();
        }r.close();
        p.close();
        return l;
    }

    private void keuangan() throws SQLException {
        org.jfree.data.category.DefaultCategoryDataset data=new org.jfree.data.category.DefaultCategoryDataset();
        LocalDate l=LocalDate.of(2012, java.time.Month.JANUARY, 1);
        while(l.isBefore(LocalDate.now())){
            data.addValue(getIncome(l), "INCOME", ""+l.getMonth()+" "+l.getYear());
            data.addValue(getExpenses(l), "EXPENSES", ""+l.getMonth()+" "+l.getYear());
            l=l.plusMonths(1);
        }org.jfree.chart.ChartPanel c=new org.jfree.chart.ChartPanel(ChartFactory.createLineChart("KEUANGAN", "BULAN", "JUMLAH", data, 
                PlotOrientation.VERTICAL,true, true, false));
        c.setAutoscrolls(true);
        tab.add("KEUANGAN", c);
    }

    private long getIncome(LocalDate date) throws SQLException {
        long l=0;
        java.sql.PreparedStatement p=d.getPS("select total from jual where tgl>=? and tgl<=?");
        p.setDate(1, java.sql.Date.valueOf(date));
        p.setDate(2, java.sql.Date.valueOf(date.plusMonths(1).minusDays(1)));
        java.sql.ResultSet r=p.executeQuery();
        while(r.next()){
            l+=r.getLong("total");
        }r.close();
        p.close();
        return l;
    }

    private long getExpenses(LocalDate date) throws SQLException {
        long l=0;
        java.sql.PreparedStatement p=d.getPS("select sat from memasok where tgl>=? and tgl<=?");
        p.setDate(1, java.sql.Date.valueOf(date));
        p.setDate(2, java.sql.Date.valueOf(date.plusMonths(1).minusDays(1)));
        java.sql.ResultSet r=p.executeQuery();
        while(r.next()){
            l+=r.getLong("sat");
        }r.close();
        p.close();
        return l;
    }
}
