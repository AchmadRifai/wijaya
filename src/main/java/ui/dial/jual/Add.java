/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.dial.jual;

import java.awt.Color;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrintManager;
import org.joda.money.CurrencyUnit;

/**
 *
 * @author ai
 */
public class Add extends javax.swing.JDialog {
private util.Db d;
private entity.Jual j;
private java.awt.Frame p;
    /**
     * Creates new form Add
     */
    public Add(java.awt.Frame parent, boolean modal,util.Db db,entity.Jual ju) {
        super(parent, modal);
        d=db;
        p=parent;
        j=ju;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        brg = new javax.swing.JComboBox<>();
        nmBrg = new javax.swing.JLabel();
        hrgBrg = new javax.swing.JLabel();
        jum = new javax.swing.JSpinner();
        satuan = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        item = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        totalBYR = new javax.swing.JTextField();
        byr = new javax.swing.JFormattedTextField();
        kembali = new javax.swing.JTextField();
        cs = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("PEMILIHAN BARANG"));

        brg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Satu :" }));
        brg.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                brgItemStateChanged(evt);
            }
        });

        nmBrg.setText("Nama BRG : ???");

        hrgBrg.setText("Harga BRG : ???");

        jum.setEnabled(false);
        jum.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jumStateChanged(evt);
            }
        });

        satuan.setText("???");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jum)
                    .addComponent(brg, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(satuan)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(nmBrg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 284, Short.MAX_VALUE)
                        .addComponent(hrgBrg)
                        .addGap(197, 197, 197))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nmBrg)
                    .addComponent(hrgBrg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(satuan))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        item.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "KODE BRG", "NAMA BRG", "SATUAN", "QTY", "HRG SATUAN", "BAYAR"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(item);

        jLabel1.setText("TOTAL PEMBAYARAN :");

        jLabel2.setText("DIBAYAR :");

        jLabel3.setText("KEMBALIAN :");

        totalBYR.setEditable(false);
        totalBYR.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        byr.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        byr.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        byr.setText("0");
        byr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                byrKeyReleased(evt);
            }
        });

        kembali.setEditable(false);
        kembali.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        cs.setText("LANJUTKAN");
        cs.setEnabled(false);
        cs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(totalBYR, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(byr, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                            .addComponent(kembali)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cs)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(totalBYR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(byr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(kembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cs)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        JOptionPane.showMessageDialog(rootPane, "Nothing to do!");
        hapus();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setTitle("PENJUALAN FAKTUR "+j.getNota());
        muat();
    }//GEN-LAST:event_formWindowOpened

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        
    }//GEN-LAST:event_formMouseMoved

    private void brgItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_brgItemStateChanged
        if(0<brg.getSelectedIndex())try {
            entity.Barang b=new entity.Barang(brg.getItemAt(brg.getSelectedIndex()), d);
            entity.DetJual dj=new entity.DetJual(j.getNota(), b.getKode(), d);
            if(null==dj.getByr())jum.setModel(new javax.swing.SpinnerNumberModel(0, 0, b.getStok(), 0.1));
            else jum.setModel(new javax.swing.SpinnerNumberModel(dj.getJum(), 0, b.getStok(), 0.1));
            jum.setEnabled(true);
            nmBrg.setText("Nama BRG : "+b.getNm());
            satuan.setText(b.getSatuan());
            hrgBrg.setText("Harga BRG : "+b.getHrg());
        } catch (SQLException ex) {
            util.Db.hindar(ex);
        }else{
            jum.setEnabled(false);
            nmBrg.setText("Nama BRG : ???");
            hrgBrg.setText("Harga BRG : ???");
            satuan.setText("???");
        }
    }//GEN-LAST:event_brgItemStateChanged

    private void jumStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jumStateChanged
        float f=Float.parseFloat(jum.getValue().toString());
        if(f>0)masuk();
        else tokno();
    }//GEN-LAST:event_jumStateChanged

@SuppressWarnings("UnusedAssignment")
    private void byrKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_byrKeyReleased
        if(byr.isValid()&&!byr.getText().isEmpty()){
            long l=Long.parseLong(byr.getText());
            try {
                l-=getTotale();
            } catch (SQLException ex) {
                util.Db.hindar(ex);
            }kembali.setText(org.joda.money.Money.of(CurrencyUnit.of("IDR"), l).toString());
        }validasine();
    }//GEN-LAST:event_byrKeyReleased

    private void csActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csActionPerformed
        selesai();
        int x=JOptionPane.showConfirmDialog(rootPane, "Apa orang ini butuh struk?", "BUTUH?", JOptionPane.YES_NO_OPTION);
        if(x==JOptionPane.YES_OPTION)cetak();
        this.setVisible(false);
    }//GEN-LAST:event_csActionPerformed

    private void hapus() {
    try {
        java.sql.PreparedStatement ps=d.getPS("delete from jual where nota=?");
        ps.setString(1, j.getNota());
        ps.execute();
        ps.close();
    } catch (SQLException ex) {
        util.Db.hindar(ex);
    }
    }

    private void muat() {
    try {
        for(entity.Barang b:new entity.dao.DAOBarang(d).getDatae())if(0<b.getStok())brg.addItem(b.getKode());
    } catch (SQLException ex) {
        util.Db.hindar(ex);
    }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> brg;
    private javax.swing.JFormattedTextField byr;
    private javax.swing.JButton cs;
    private javax.swing.JLabel hrgBrg;
    private javax.swing.JTable item;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jum;
    private javax.swing.JTextField kembali;
    private javax.swing.JLabel nmBrg;
    private javax.swing.JLabel satuan;
    private javax.swing.JTextField totalBYR;
    // End of variables declaration//GEN-END:variables

    private void masuk() {
    try {
        entity.DetJual a=new entity.DetJual(j.getNota(), brg.getItemAt(brg.getSelectedIndex()), d);
        if(null==a.getByr()){
            entity.Barang bar=new entity.Barang(brg.getItemAt(brg.getSelectedIndex()), d);
            double byrd=bar.getHrg().getAmount().doubleValue()*Float.parseFloat(jum.getValue().toString());
            org.joda.money.Money m=org.joda.money.Money.of(CurrencyUnit.of("IDR"), Math.round(byrd));
            new entity.dao.DADetJual(d).insert(new entity.DetJual(j.getNota(), bar.getKode(), Float.parseFloat(jum.getValue().toString()), m));
        }else{
            entity.Barang bar=new entity.Barang(brg.getItemAt(brg.getSelectedIndex()), d);
            double byrd=bar.getHrg().getAmount().doubleValue()*Float.parseFloat(jum.getValue().toString());
            org.joda.money.Money m=org.joda.money.Money.of(CurrencyUnit.of("IDR"), Math.round(byrd));
            entity.DetJual b=new entity.DetJual(a.getNota(), a.getNota(), Float.parseFloat(jum.getValue().toString()),m);
            new entity.dao.DADetJual(d).update(a, b);
        }refresh();
    } catch (SQLException ex) {
        util.Db.hindar(ex);
    }
    }

    private void tokno() {
    try {
        entity.DetJual dj=new entity.DetJual(j.getNota(), brg.getItemAt(brg.getSelectedIndex()), d);
        new entity.dao.DADetJual(d).delete(dj);
        refresh();
    } catch (SQLException ex) {
        util.Db.hindar(ex);
    }
    }

    private void refresh() throws SQLException {
        javax.swing.table.DefaultTableModel m=(javax.swing.table.DefaultTableModel) item.getModel();
        for(int x=m.getRowCount()-1;x>=0;x--)m.removeRow(x);
        java.sql.PreparedStatement ps=d.getPS("select*from detjual where nota=?");
        ps.setString(1, j.getNota());
        java.sql.ResultSet rs=ps.executeQuery();
        while(rs.next()){
            entity.Barang b=new entity.Barang(rs.getString("brg"), d);
            entity.DetJual dj=new entity.DetJual(j.getNota(), rs.getString("brg"), d);
            m.addRow(new Object[]{b.getKode(),b.getNm(),b.getSatuan(),dj.getJum(),b.getHrg(),dj.getByr()});
        }rs.close();
        ps.close();
        totalan();
    }

    private void totalan() throws SQLException {
        org.joda.money.Money m=org.joda.money.Money.of(CurrencyUnit.of("IDR"), getTotale());
        totalBYR.setText(m.toString());
        this.byrKeyReleased(null);
    }

    private void validasine() {
        org.joda.money.Money m=org.joda.money.Money.parse(kembali.getText());
        if(0<=m.getAmount().longValue())kembali.setForeground(Color.BLACK);
        else kembali.setForeground(Color.red);
        cs.setEnabled(Color.BLACK==kembali.getForeground());
    }

    private long getTotale() throws SQLException {
        org.joda.money.Money m=org.joda.money.Money.of(CurrencyUnit.of("IDR"), 0);
        java.sql.PreparedStatement p=d.getPS("select byr from detjual where nota=?");
        p.setString(1, j.getNota());
        java.sql.ResultSet r=p.executeQuery();
        while(r.next())m=m.plus(org.joda.money.Money.parse(r.getString("byr")));
        return m.getAmount().longValueExact();
    }

    private void selesai() {
    try {
        entity.Jual b=new entity.Jual(j.getNota(), d);
        b.setTotal(org.joda.money.Money.parse(totalBYR.getText()));
        b.setKembali(org.joda.money.Money.parse(kembali.getText()));
        b.setByr(org.joda.money.Money.of(CurrencyUnit.of("IDR"), Long.parseLong(byr.getText())));
        new entity.dao.DAOJual(d).update(j, b);
        for(entity.DetJual dj:b.getDet()){
            entity.Barang b1=new entity.Barang(dj.getBrg(), d),b2=new entity.Barang(dj.getBrg(), d);
            b2.setStok(b1.getStok()-dj.getJum());
            new entity.dao.DAOBarang(d).update(b1, b2);
        }
    } catch (SQLException ex) {
        util.Db.hindar(ex);
    }
    }

    private void cetak() {
    try {
        java.util.Map<String,Object>m=new java.util.HashMap<String,Object>();
        m.put("nota", j.getNota());
        JasperPrintManager.printReport(JasperFillManager.fillReport(JasperCompileManager.compileReport(util.Struk.f.getAbsolutePath()), 
                m,d.getC()), false);
    } catch (JRException ex) {
        util.Db.hindar(ex);
    }
    }

}
